{"version":3,"sources":["MainContext.js","components/Sidebar.js","components/Search.js","helpers.js","components/Brand.js","components/Download.js","components/Loader.js","components/Content.js","components/Copied.js","components/Collection.js","App.js","index.js"],"names":["MainContext","createContext","Sidebar","useState","modalIsOpen","setModalIsOpen","toggleModal","useContext","setSelectedBrands","setSearch","className","to","onClick","isOpen","onRequestClose","overlayClassName","Search","search","type","onChange","e","target","value","placeholder","getContrastYIQ","hexcolor","parseInt","substr","Brand","brand","selectedBrands","setCopied","includes","slug","filter","title","colors","map","color","onSuccess","setColor","component","style","Download","brands","downloadUrl","setDownloadUrl","cssMethod","setCssMethod","useEffect","length","output","find","key","blob","Blob","url","URL","createObjectURL","revokeObjectURL","download","href","join","Loader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","Content","once","overflow","Copied","Collection","slugs","useParams","history","useHistory","split","push","App","brandsArray","Object","keys","BrandsData","setBrands","copied","timeOut","setTimeout","clearTimeout","toLowerCase","toLocaleLowerCase","forceCheck","data","Provider","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.740b46ad.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst MainContext = createContext()\r\n\r\nexport default MainContext","import { useState, useContext } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport MainContext from \"../MainContext\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!modalIsOpen);\r\n  };\r\n  const { setSelectedBrands, setSearch } = useContext(MainContext)\r\n\r\n  const backHomepage = () => {\r\n    setSelectedBrands([])\r\n    setSearch('')\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <aside className=\"sidebar\">\r\n        <div className=\"logo\">\r\n          <Link to=\"/brandcolors\" onClick={backHomepage}>\r\n            <a>\r\n              Brand<b>Colors</b>\r\n            </a>\r\n          </Link>\r\n\r\n        </div>\r\n        <div className=\"description\">\r\n          The biggest collection of official brand color codes around. Curated\r\n          by @brandcolors and friends.\r\n        </div>\r\n        <nav className=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a onClick={toggleModal}>About BrandColors</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={toggleModal}\r\n        className=\"about-modal\"\r\n        overlayClassName=\"about-modal-overlay\"\r\n      >\r\n        <button className=\"modal-close-btn\" onClick={toggleModal}>\r\n          <GrClose />\r\n        </button>\r\n        <h3>About BrandColors</h3>\r\n        <p>\r\n          BrandColors was created by DesignBombs. The goal was to create a\r\n          helpful reference for the brand color codes that are needed most\r\n          often.\r\n        </p>\r\n        <p>\r\n          It's been featured by Smashing Magazine, CSS-Tricks, Web Design Depot,\r\n          Tuts+, and over 2 million pageviews. There are now over 600 brands\r\n          with 1600 colors and the collection is always growing.\r\n        </p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext } from 'react'\r\nimport MainContext from '../MainContext'\r\nimport { GrSearch } from 'react-icons/gr'\r\n\r\nconst Search = () => {\r\n    const { search, setSearch} = useContext(MainContext)\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"icon\">\r\n                <GrSearch />\r\n            </div>\r\n            <input type=\"text\" onChange={(e) => setSearch(e.target.value)} placeholder=\"Search\"/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","const getContrastYIQ = (hexcolor) => {\r\n\tvar r = parseInt(hexcolor.substr(0,2),16);\r\n\tvar g = parseInt(hexcolor.substr(2,2),16);\r\n\tvar b = parseInt(hexcolor.substr(4,2),16);\r\n\tvar yiq = ((r*299)+(g*587)+(b*114))/1000;\r\n\treturn (yiq >= 128) ? 'black' : 'white';\r\n}\r\n\r\nexport { getContrastYIQ }","import { useContext } from 'react'\r\nimport { getContrastYIQ } from '../helpers'\r\nimport MainContext from '../MainContext'\r\nimport ClipboardButton from 'react-clipboard.js'\r\n\r\nconst Brand = ({ brand }) => {\r\n\r\n    const { selectedBrands, setSelectedBrands, setCopied } = useContext(MainContext)\r\n\r\n    const toggleSelected = () => {\r\n        if (selectedBrands.includes(brand.slug)) {\r\n            setSelectedBrands(selectedBrands.filter(slug => slug !== brand.slug))\r\n        } else {\r\n            setSelectedBrands([...selectedBrands, brand.slug])\r\n        }\r\n    }\r\n\r\n    const setColor = (color) => {\r\n        setCopied(color)\r\n    }\r\n\r\n    return (\r\n        <div className={`brand ${selectedBrands.includes(brand.slug) ? 'selected' : ''}`}>\r\n            <h5 onClick={toggleSelected}>{brand.title}</h5>\r\n            <div className=\"brand-colors\">\r\n                {brand.colors.map(color => (\r\n                    <ClipboardButton data-clipboard-text={color} onSuccess={() => setColor(color)} component=\"span\" style={{ '--bgColor': `#${color}`, '--textColor': `${getContrastYIQ(color)}` }}>\r\n                        {color}\r\n                    </ClipboardButton>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Brand","import React, { useState, useContext, useEffect } from 'react';\r\nimport MainContext from '../MainContext';\r\nimport { GrLink, GrDownload, GrClose } from 'react-icons/gr';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Download = () => {\r\n\r\n    const { selectedBrands, setSelectedBrands, brands } = useContext(MainContext)\r\n    const [downloadUrl, setDownloadUrl] = useState()\r\n    const [cssMethod, setCssMethod] = useState('css')\r\n\r\n    useEffect(() => {\r\n        if (selectedBrands.length > 0) {\r\n\r\n            let output = ''\r\n            switch (cssMethod) {\r\n                case 'css':\r\n                    output += ':root {\\n'\r\n                    selectedBrands.map(slug => {\r\n                        let brand = brands.find(brand => brand.slug === slug)\r\n                        brand.colors.map((color, key) => {\r\n                            output += `--?${slug}-${key}:#${color};\\n`\r\n                        })\r\n                    })\r\n                    output += '}'\r\n                    break;\r\n\r\n                case 'scss':\r\n                    selectedBrands.map(slug => {\r\n                        let brand = brands.find(brand => brand.slug === slug)\r\n                        brand.colors.map((color, key) => {\r\n                            output += `--$${slug}-${key}:#${color};\\n`\r\n                        })\r\n                    })\r\n                    break;\r\n                case 'less':\r\n                    selectedBrands.map(slug => {\r\n                        let brand = brands.find(brand => brand.slug === slug)\r\n                        brand.colors.map((color, key) => {\r\n                            output += `@${slug}-${key}:#${color};\\n`\r\n                        })\r\n                    })\r\n                    break;\r\n            }\r\n\r\n            const blob = new Blob([output])\r\n            const url = (URL.createObjectURL(blob))\r\n            setDownloadUrl(url)\r\n\r\n            return () => {\r\n                URL.revokeObjectURL(url)\r\n                setDownloadUrl('')\r\n            }\r\n        }\r\n    }, [selectedBrands, cssMethod])\r\n\r\n    return (\r\n        <div className=\"download\">\r\n            <div className=\"actions\">\r\n                <select onChange={(e) => setCssMethod(e.target.value)}>\r\n                    <option value=\"css\">CSS</option>\r\n                    <option value=\"scss\">SCSS</option>\r\n                    <option value=\"less\">LESS</option>\r\n                </select>\r\n                <a download={`brands.${cssMethod}`} href={downloadUrl}>\r\n                    <GrDownload />\r\n                </a>\r\n                <Link to={`/collection/${selectedBrands.join(',')}`}>\r\n                    <GrLink />\r\n                </Link>\r\n            </div>\r\n            <div className=\"selected\" onClick={() => setSelectedBrands([])}>\r\n                <GrClose />\r\n                {selectedBrands.length} brands collected\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Download\r\n","import React from 'react'\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <ContentLoader\r\n            speed={2}\r\n            width={400}\r\n            height={103}\r\n            viewBox=\"0 0 400 103\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\"\r\n        >\r\n            <rect x=\"8\" y=\"7\" rx=\"3\" ry=\"3\" width=\"88\" height=\"15\" />\r\n            <rect x=\"10\" y=\"39\" rx=\"0\" ry=\"0\" width=\"70\" height=\"40\" />\r\n            <rect x=\"84\" y=\"39\" rx=\"0\" ry=\"0\" width=\"70\" height=\"40\" />\r\n            <rect x=\"157\" y=\"39\" rx=\"0\" ry=\"0\" width=\"70\" height=\"40\" />\r\n        </ContentLoader>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { useContext } from 'react';\r\nimport Search from './Search';\r\nimport Brand from './Brand';\r\nimport Download from './Download';\r\nimport MainContext from '../MainContext';\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from './Loader';\r\n\r\nconst Content = () => {\r\n\r\n    const { brands, selectedBrands } = useContext(MainContext)\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <header className=\"header\">\r\n                <Search />\r\n                {selectedBrands.length !== 0 && <Download />}\r\n            </header>\r\n            <section className=\"brands\">\r\n                {brands.map(brand => (\r\n                    <LazyLoad key={brand.slug} once=\"true\" overflow=\"true\" placeholder={<Loader />}>\r\n                        <Brand brand={brand} />\r\n                    </LazyLoad>\r\n                ))}\r\n\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport { getContrastYIQ } from '../helpers'\r\n\r\nconst Copied = ({color}) => {\r\n    return (\r\n        <div className=\"copied\" style={{ '--bgColor': `#${color}`, '--textColor': `${getContrastYIQ(color)}` }}>\r\n            Copied #{color} to clipboard\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Copied\r\n","import { useContext, useEffect } from 'react';\r\nimport Download from './Download';\r\nimport Brand from './Brand';\r\nimport Loader from './Loader';\r\nimport MainContext from '../MainContext';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport { GrLinkPrevious } from 'react-icons/gr';\r\n\r\n\r\nconst Collection = () => {\r\n\r\n    const { slugs } = useParams()\r\n    const history = useHistory()\r\n    const { selectedBrands, setSelectedBrands, setSearch, brands } = useContext(MainContext)\r\n    const clearSelectedBrands = () => {\r\n        setSelectedBrands([])\r\n        setSearch('')\r\n        history.push(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectedBrands(slugs.split(','))\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <header className=\"header\">\r\n                <Link to=\"/brandcolors\" onClick={clearSelectedBrands}>\r\n                    <a className=\"back-btn\">\r\n                        <GrLinkPrevious />\r\n                        All brands\r\n                    </a>\r\n                </Link>\r\n                {selectedBrands.length !== 0 && <Download />}\r\n            </header>\r\n            <section className=\"brands\">\r\n                {selectedBrands.map(slug => {\r\n                    let brand = brands.find(brand => brand.slug === slug)\r\n                    return (\r\n                        <LazyLoad key={brand.slug} once=\"true\" overflow=\"true\" placeholder={<Loader />}>\r\n                            <Brand brand={brand} />\r\n                        </LazyLoad>\r\n                    )\r\n                })}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Collection\r\n","import { useEffect, useState } from \"react\";\r\nimport MainContext from \"./MainContext\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Content from \"./components/Content\";\r\nimport Copied from \"./components/Copied\";\r\nimport Collection from \"./components/Collection\";\r\nimport BrandsData from './brands.json';\r\nimport { forceCheck } from \"react-lazyload\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const brandsArray = []\r\n  Object.keys(BrandsData).map(key => {\r\n    brandsArray.push(BrandsData[key])\r\n  })\r\n\r\n  const [brands, setBrands] = useState(brandsArray)\r\n  const [selectedBrands, setSelectedBrands] = useState([])\r\n  const [copied, setCopied] = useState(false)\r\n  const [search, setSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setCopied(false)\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(timeOut)\r\n    }\r\n  }, [copied])\r\n\r\n  useEffect(() => {\r\n    setBrands(brandsArray.filter(brand => brand.title.toLowerCase().includes(search.toLocaleLowerCase())))\r\n  }, [search])\r\n\r\n  useEffect(() => {\r\n    forceCheck()\r\n  }, [brands])\r\n\r\n\r\n  const data = {\r\n    brands,\r\n    selectedBrands,\r\n    setSelectedBrands,\r\n    setCopied,\r\n    setSearch\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MainContext.Provider value={data}>\r\n        {copied && <Copied color={copied} />}\r\n        <Router>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Content />\r\n            </Route>\r\n            <Route path=\"/brandcolors\" exact>\r\n              <Content />\r\n            </Route>\r\n            <Route path=\"/collection/:slugs\">\r\n              <Collection />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </MainContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}